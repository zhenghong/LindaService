<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/context
     			http://www.springframework.org/schema/context/spring-context-3.0.xsd
     			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<task:annotation-driven />

	<context:component-scan base-package="com.lm.service" />
	<context:component-scan base-package="com.lm.mes" />
	<context:component-scan base-package="com.lm.aop" />
	
	<aop:aspectj-autoproxy />
	
	<bean id="springContextUtil" class="com.lm.utils.SpringContextUtil" />
	
	<bean id="basePropertyPlaceHolder"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		lazy-init="true">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/properties/jdbc.properties</value>
				<value>classpath*:/properties/redis.properties</value>
			</list>
		</property>
	</bean>	
	
	<!-- task -->
    
    <!-- atomikos -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close" >
 		<property name="forceShutdown" value="false" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" >
		<property name="transactionTimeout" value="300" />
	</bean>

	<bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />	
        <property name="allowCustomIsolationLevels" value="true"/>	
	</bean>  
	
	<tx:annotation-driven transaction-manager="springTransactionManager" />

	<!-- mybatis -->
	<bean id="ds" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">  
	    <property name="uniqueResourceName" value="Linda"/>  
	    <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>  
	    <property name="xaProperties">  
	        <props>  
	            <prop key="url">${Linda.url}</prop>  
	            <prop key="user">${Linda.username}</prop>  
	            <prop key="password">${Linda.password}</prop>  
	        </props>  
	    </property>  
	    <property name="minPoolSize" value="10" />  
	    <property name="maxPoolSize" value="100" />  
	    <property name="borrowConnectionTimeout" value="30" />  
	    <property name="maintenanceInterval" value="60" />  
	</bean>	
	<bean id="ds2" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">  
	    <property name="uniqueResourceName" value="Linda2"/>  
	    <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>  
	    <property name="xaProperties">  
	        <props>  
	            <prop key="url">${Linda2.url}</prop>  
	            <prop key="user">${Linda2.username}</prop>  
	            <prop key="password">${Linda2.password}</prop>  
	        </props>  
	    </property>  
	    <property name="minPoolSize" value="10" />  
	    <property name="maxPoolSize" value="100" />  
	    <property name="borrowConnectionTimeout" value="30" />  
	    <property name="maintenanceInterval" value="60" />  
	</bean>

	<!-- SqlSessionFactory -->
	<bean id="sqlSFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<property name="configLocation" value="classpath:config/spring-myBatis.xml" />
	</bean>
	<bean id="sqlSFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds2" />
		<property name="configLocation" value="classpath:config/spring-myBatis2.xml" />
	</bean>

	<bean name="mscan" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lm.mapping" />
		<property name="sqlSessionFactoryBeanName" value="sqlSFactory" />
	</bean>

	<bean name="mscan2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lm.mapping2" />
		<property name="sqlSessionFactoryBeanName" value="sqlSFactory2" />
	</bean>

	<!-- import xml -->
	<import resource="dubboP.xml" />
	<import resource="spring-redisCluster.xml" />
	<import resource="spring-amq.xml" />

</beans>